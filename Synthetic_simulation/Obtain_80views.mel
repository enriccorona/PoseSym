// CREATE ICOSAHEDRON
polyPlatonicSolid -r 10 -l 7.137 -ax 0 1 0 -st 0  -cuv 4 -ch 1;

//polyPlatonicSolid -r 10 -l 10.515 -ax 0 1 0 -st 1  -cuv 4 -ch 1;
$vert = `polyEvaluate -vertex`;
$num_cameras = $vert[0];

// ANOTHER ONE:
polyPlatonicSolid -r 10 -l 7.137 -ax 0 1 0 -st 0  -cuv 4 -ch 1;
select pSolid2;
rotate -r -os -fo 0 -90 0 ;

$vert = `polyEvaluate -vertex`;
$num_cameras2 = $num_cameras + $vert[0];

// CREATE CAMERAS ON VERTICES OF SPHERE
for( $i = 0; $i < $num_cameras ; $i = $i+1){ //Condition: $x<$k[0]
    $pos = `pointPosition ("pSolid1.vtx[" + $i + "]")`;
    $x = float($pos[0]);
    $h = float($pos[1]);
    $z = float($pos[2]);
    
    $horiz_distance = sqrt($x*$x + $z*$z);
    $angle = atan2($x,$z)*180/3.14159;
    
    $rotation = 0;
    if ($h == 0){
     $rotation = 0;
    }else{
     if($horiz_distance == 0 && $h > 0){
         $rotation = -90;
         continue;
     }else if($horiz_distance == 0){
         $rotation = 90;
         continue;
     }else{
         $rotation = -1*atan2($h,$horiz_distance)*180/3.14159;
     }
    }
    camera -centerOfInterest 5 -focalLength 35 -lensSqueezeRatio 1 -cameraScale 1 -horizontalFilmAperture 1.41732 -horizontalFilmOffset 0 -verticalFilmAperture 0.94488 -verticalFilmOffset 0 -filmFit Fill -overscan 1 -motionBlur 0 -shutterAngle 144 -nearClipPlane 0.1 -farClipPlane 10000 -orthographic 0 -orthographicWidth 30 -panZoomEnabled 0 -horizontalPan 0 -verticalPan 0 -zoom 1  -horizontalFieldOfView 43 -verticalFieldOfView 57; objectMoveCommand; cameraMakeNode 1 "";
    select ("camera" + ( $i*4+1 ));
    string $instruction = "cameraShape"+($i*4+1) + ".mask";
    setAttr ("cameraShape" + ($i*4+1) + ".backgroundColor") -type double3 1 1 1 ;
    setAttr $instruction 0;
    move -r $x $h $z;
    rotate -r -os -fo 0 $angle 0;
    rotate -r -os -fo $rotation 0 0;  


    camera -centerOfInterest 5 -focalLength 35 -lensSqueezeRatio 1 -cameraScale 1 -horizontalFilmAperture 1.41732 -horizontalFilmOffset 0 -verticalFilmAperture 0.94488 -verticalFilmOffset 0 -filmFit Fill -overscan 1 -motionBlur 0 -shutterAngle 144 -nearClipPlane 0.1 -farClipPlane 10000 -orthographic 0 -orthographicWidth 30 -panZoomEnabled 0 -horizontalPan 0 -verticalPan 0 -zoom 1  -horizontalFieldOfView 43 -verticalFieldOfView 57; objectMoveCommand; cameraMakeNode 1 "";
    select ("camera" + ($i*4+2));
    string $instruction = "cameraShape"+($i*4+2) + ".mask";
    setAttr ("cameraShape" + ($i*4+2) + ".backgroundColor") -type double3 1 1 1 ;
    setAttr $instruction 0;
    move -r $x $h $z;
    rotate -r -os -fo 0 $angle 0;
    rotate -r -os -fo $rotation 0 0;  
    rotate -r -os -fo 0 0 90;

    camera -centerOfInterest 5 -focalLength 35 -lensSqueezeRatio 1 -cameraScale 1 -horizontalFilmAperture 1.41732 -horizontalFilmOffset 0 -verticalFilmAperture 0.94488 -verticalFilmOffset 0 -filmFit Fill -overscan 1 -motionBlur 0 -shutterAngle 144 -nearClipPlane 0.1 -farClipPlane 10000 -orthographic 0 -orthographicWidth 30 -panZoomEnabled 0 -horizontalPan 0 -verticalPan 0 -zoom 1  -horizontalFieldOfView 43 -verticalFieldOfView 57; objectMoveCommand; cameraMakeNode 1 "";
    select ("camera" + ($i*4+3));
    string $instruction = "cameraShape"+($i*4+3) + ".mask";
    setAttr ("cameraShape" + ($i*4+3) + ".backgroundColor") -type double3 1 1 1 ;
    setAttr $instruction 0;    
    move -r $x $h $z;
    rotate -r -os -fo 0 $angle 0;
    rotate -r -os -fo $rotation 0 0;  
    rotate -r -os -fo 0 0 180;

    camera -centerOfInterest 5 -focalLength 35 -lensSqueezeRatio 1 -cameraScale 1 -horizontalFilmAperture 1.41732 -horizontalFilmOffset 0 -verticalFilmAperture 0.94488 -verticalFilmOffset 0 -filmFit Fill -overscan 1 -motionBlur 0 -shutterAngle 144 -nearClipPlane 0.1 -farClipPlane 10000 -orthographic 0 -orthographicWidth 30 -panZoomEnabled 0 -horizontalPan 0 -verticalPan 0 -zoom 1  -horizontalFieldOfView 43 -verticalFieldOfView 57; objectMoveCommand; cameraMakeNode 1 "";
    select ("camera" + ($i*4 + 4));
    string $instruction = "cameraShape"+($i*4+4) + ".mask";
    setAttr ("cameraShape" + ($i*4+4) + ".backgroundColor") -type double3 1 1 1 ;
    setAttr $instruction 0;    
    move -r $x $h $z;
    rotate -r -os -fo 0 $angle 0;
    rotate -r -os -fo $rotation 0 0; 
    rotate -r -os -fo 0 0 -90;      
}

$num_cameras = $num_cameras*4;

/*
// CREATE CAMERAS ON VERTICES OF SPHERE
for( $i = 0; $i < $num_cameras ; $i = $i+1){ //Condition: $x<$k[0]
    $pos = `pointPosition ("pSolid2.vtx[" + ($i) + "]")`;
    $x = float($pos[0]);
    $h = float($pos[1]);
    $z = float($pos[2]);
    
    float $min_dist = 9999.0;
    
    for ($j = 0; $j < $num_cameras; $j = $j + 1){
        $position_cam = `getAttr ("camera" + ($j+1) + ".t")`;
        float $dist = ($x - $position_cam[0])*($x - $position_cam[0])  + ($h - $position_cam[1])*($h - $position_cam[1]) + ($z - $position_cam[2])*($z - $position_cam[2]);

        if ($dist < $min_dist){
            $min_dist = $dist;
        }
    }
    print $i;
    print "\n";

    print $min_dist;
    print "\n\n";
    if ($min_dist < 0.1){
        print "continuing\n";
        continue;
    }
    
    $horiz_distance = sqrt($x*$x + $z*$z);
    $angle = atan2($x,$z)*180/3.14159;
    
    $rotation = 0;
    if ($h == 0){
     $rotation = 0;
    }else{
     if($horiz_distance == 0 && $h > 0){
         $rotation = -90;
         continue;
     }else if($horiz_distance == 0){
         $rotation = 90;
         continue;
     }else{
         $rotation = -1*atan2($h,$horiz_distance)*180/3.14159;
     }
    }
        
    $num_cameras = $num_cameras + 1;
    
    camera -centerOfInterest 5 -focalLength 35 -lensSqueezeRatio 1 -cameraScale 1 -horizontalFilmAperture 1.41732 -horizontalFilmOffset 0 -verticalFilmAperture 0.94488 -verticalFilmOffset 0 -filmFit Fill -overscan 1 -motionBlur 0 -shutterAngle 144 -nearClipPlane 0.1 -farClipPlane 10000 -orthographic 0 -orthographicWidth 30 -panZoomEnabled 0 -horizontalPan 0 -verticalPan 0 -zoom 1  -horizontalFieldOfView 43 -verticalFieldOfView 57; objectMoveCommand; cameraMakeNode 1 "";

    select ("camera" + $num_cameras);
    string $instruction = "cameraShape"+ $num_cameras + ".mask";
    setAttr $instruction 0;
    
    move -r $x $h $z;
    
    rotate -r -os -fo 0 $angle 0;
    rotate -r -os -fo $rotation 0 0;   
}

*/

select pSolid1;
doDelete;
select pSolid2;
doDelete;


$fileid = fopen("/Users/enric/toronto_project/model_views/cameras.csv");
fprint $fileid("Camera_id, PosX, Pos_Y, Pos_Z\n"); // Field of view, these things etc.

for ($i = 0; $i < $num_cameras ; $i++){
    $pos_cam = `getAttr ("camera" + ($i+1) + ".t")`;
    fprint $fileid(($i+1) + "," + $pos_cam[0] + "," + $pos_cam[1] + "," + $pos_cam[2] + "," + (($i%4)*90) + "\n");
}
fclose $fileid;

